version: "3"

services:
  run_orchestrator:
    build: ./run_orchestrator/
    container_name: orchestrator
    ports:
      - "8000:8000"
    networks:
      - private_network
    depends_on:
      - producer_orchestration_queue
      - run_results_database
  producer_orchestration_queue:
    image: rabbitmq:3.9.13-management
    container_name: orch-queue
    ports:
      - "5679:5672"
      - "15679:15672"
    networks:
      - private_network
  broker_queue:
    image: rabbitmq:3.9.13-management
    container_name: broker-queue
    hostname: broker-queue
    ports:
      - "5675:5672"
      - "15675:15672"
    networks:
      - private_network
  producer:
    build: ./producer/
    container_name: producer
    depends_on:
      - producer_orchestration_queue
      - broker_queue
    networks:
      - private_network
  broker:
    build: ./broker/
    container_name: broker
    depends_on:
      - broker_queue
    networks:
      - private_network
  worker0:
    build:
      context: ./worker/
    command: "0"
    container_name: worker0
    networks:
      - private_network
  worker1:
    build:
      context: ./worker/
    command: "1"
    container_name: worker1
    networks:
      - private_network
  worker2:
    build:
      context: ./worker/
    command: "2"
    container_name: worker2
    networks:
      - private_network
  olt0:
    build:
      context: ./olt/
    command: "0"
    container_name: olt0
    networks:
      - private_network
  olt1:
    build:
      context: ./olt/
    command: "1"
    container_name: olt1
    networks:
      - private_network
  olt2:
    build:
      context: ./olt/
    command: "2"
    container_name: olt2
    networks:
      - private_network
  olt3:
    build:
      context: ./olt/
    command: "3"
    container_name: olt3
    networks:
      - private_network
  olt4:
    build:
      context: ./olt/
    command: "4"
    container_name: olt4
    networks:
      - private_network
  worker0_queue:
    image: rabbitmq:3.9.13-management
    container_name: worker-queue0
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - private_network
  worker1_queue:
    image: rabbitmq:3.9.13-management
    container_name: worker-queue1
    ports:
      - "5673:5672"
      - "15673:15672"
    networks:
      - private_network
  worker2_queue:
    image: rabbitmq:3.9.13-management
    container_name: worker-queue2
    ports:
      - "5674:5672"
      - "15674:15672"
    networks:
      - private_network

  olt0_queue:
    image: rabbitmq:3.9.13-management
    container_name: olt-queue0
    ports:
      - "5676:5672"
      - "15676:15672"
    networks:
      - private_network
  olt1_queue:
    image: rabbitmq:3.9.13-management
    container_name: olt-queue1
    ports:
      - "5677:5672"
      - "15677:15672"
    networks:
      - private_network
  olt2_queue:
    image: rabbitmq:3.9.13-management
    container_name: olt-queue2
    ports:
      - "5678:5672"
      - "15678:15672"
    networks:
      - private_network
  olt3_queue:
    image: rabbitmq:3.9.13-management
    container_name: olt-queue3
    ports:
      - "5680:5672"
      - "15680:15672"
    networks:
      - private_network
  olt4_queue:
    image: rabbitmq:3.9.13-management
    container_name: olt-queue4
    ports:
      - "5681:5672"
      - "15681:15672"
    networks:
      - private_network
  redis_database:
    image: redis:latest
    container_name: redis-db
    ports:
      - "6379:6379"
    networks:
      - private_network
  results_database:
    image: redis:latest
    container_name: results-db
    ports:
      - "6380:6379"
    networks:
      - private_network
  run_results_database:
    build:
      context: ./run_results_database/
    container_name: run-results-db
    ports:
      - "5432:5432"
    networks:
      - private_network
networks:
  private_network:
    driver: bridge
