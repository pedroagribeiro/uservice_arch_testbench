# Database
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testbench-database
  namespace: dsr-onu-ztp
spec:
  selector:
    matchLabels:
      app: testbench-database
  replicas: 1
  template:
    metadata:
      labels:
        app: testbench-database
    spec:
      containers:
        - name: relational-db
          image: 10.112.106.236:32500/ztp-onu-relational-database:1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
              name: results-port
      restartPolicy: Always

# Gui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testbench-gui
  namespace: dsr-onu-ztp
spec:
  selector:
    matchLabels:
      app: testbench-gui
  replicas: 1
  template:
    metadata:
      labels:
        app: testbench-gui
    spec:
      containers:
        - name: gui
          image: 10.112.106.236:32500/ztp-onu-gui:1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
              name: gui-port
      restartPolicy: Always

# Producer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testbench-producer
  namespace: dsr-onu-ztp
spec:
  selector:
    matchLabels:
      app: testbench-producer
  replicas: 1
  template:
    metadata:
      labels:
        app: testbench-producer
    spec:
      containers:
        - name: producer
          image: 10.112.106.236:32500/ztp-onu-producer_spring:1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: producer-port
      restartPolicy: Always

# Broker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testbench-broker
  namespace: dsr-onu-ztp
spec:
  selector:
    matchLabels:
      app: testbench-broker
  replicas: 1
  template:
    metadata:
      labels:
        app: testbench-broker
    spec:
      containers:
        - name: broker
          image: 10.112.106.236:32500/ztp-onu-broker_spring:1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: broker-port
      restartPolicy: Always

# Broker Queue
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testbench-broker-queue
  namespace: dsr-onu-ztp
spec:
  selector:
    matchLabels:
      app: testbench-broker-queue
  replicas: 1
  template:
    metadata:
      labels:
        app: testbench-broker-queue
    spec:
      containers:
        - name: broker-queue
          image: rabbitmq:3.9.13-management
          imagePullPolicy: Always
          ports:
            - containerPort: 5672
              name: queue-port
            - containerPort: 15672
              name: queue-mgt
      restartPolicy: Always

# Workers Queue
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testbench-workers-queue
  namespace: dsr-onu-ztp
spec:
  selector:
    matchLabels:
      app: testbench-workers-queue
  replicas: 1
  template:
    metadata:
      labels:
        app: testbench-workers-queue
    spec:
      containers:
        - name: workers-queue
          image: rabbitmq:3.9.13-management
          imagePullPolicy: Always
          ports:
            - containerPort: 5672
              name: queue-port
            - containerPort: 15672
              name: queue-mgt
      restartPolicy: Always 

# Olts queue
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testbench-olts-queue
  namespace: dsr-onu-ztp
spec:
  selector:
    matchLabels: 
      app: testbench-olts-queue
  replicas: 1
  template:
    metadata:
      labels:
        app: testbench-olts-queue
    spec:
      containers:
        - name: olts-queue
          image: rabbitmq:3.9.13-management
          imagePullPolicy: Always
          ports:
            - containerPort: 5672
              name: queue-port
            - containerPort: 15672
              name: queue-mgt
      restartPolicy: Always

# Worker instances
{{- range $i, $e := until .Values.env.workers }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testbench-worker-{{$i}}
  namespace: dsr-onu-ztp
spec:
  selector:
    matchLabels:
      app: testbench-worker-{{$i}}
  replicas: 1
  template:
    metadata:
      labels:
        app: testbench-worker-{{$i}}  
    spec:
      containers:
        - name: worker-{{$i}}
          image: 10.112.106.236:32500/ztp-onu-worker_spring:1.0
          args: ["--worker.id={{$i}}"]
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: worker-{{$i}}-port
      restartPolicy: Always
{{- end }}

# Olt instances
{{- range $i, $e := until .Values.env.olts }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testbench-olt-{{$i}}
  namespace: dsr-onu-ztp
spec:
  selector:
    matchLabels:
      app: testbench-olt-{{$i}}
  replicas: 1
  template:
    metadata:
      labels:
        app: testbench-olt-{{$i}}
    spec:
      containers:
        - name: olt-{{$i}}
          image: 10.112.106.236:32500/ztp-onu-olt_spring:1.0
          args: ["--olt.id={{$i}}"]
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: olt-{{$i}}-port
      restartPolicy: Always
{{- end }}
